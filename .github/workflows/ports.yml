# SPDX-FileCopyrightText: 2021 Adafruit
#
# SPDX-License-Identifier: Unlicense


name: Cache Test

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ ubuntu-latest, macos-latest, windows-latest ]
        os: [ ubuntu-latest, macos-latest ]
        include:
        - os: ubuntu-latest
          path: ~/gcc-cache
        - os: macos-latest
          path: ~/gcc-cache
    steps:

    - name: Check Cache for GCC Arm
      id: cache-gcc-arm-zip
      uses: actions/cache@v2
      with:
        path: ${{ matrix.path }}
        # Change this key if we upgrade the version
        key: ${{ runner.os }}-gcc-arm-10-2020-q4-win32-dev-a

    - name: Fetch GCC Arm
      if: steps.cache-gcc-arm-zip.outputs.cache-hit != 'true'
      # Change the key above if the version below changes
      run: |
        mkdir -p ${{ matrix.path }}
        wget --no-verbose -O ${{ matrix.path }}/gcc-arm.zip https://developer.arm.com/-/media/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-win32.zip

    - name: Install dependencies
      run: |
        unzip -q -d /tmp ${{ matrix.path }}/gcc-arm.zip
        mkdir -p /tmp/usr/local
        tar -C /tmp/gcc-arm-none-* -cf - . | tar -C /tmp/usr/local -xf -
        pip3 install wheel
        # requirements_dev.txt doesn't install on windows. (with msys2 python)
        # instead, pick a subset for what we want to do
        pip3 install cascadetoml jinja2 typer
        # check that installed packages work....?
        which python; python --version; #python -c "import cascadetoml"
        which python3; python3 --version; python3 -c "import cascadetoml"
        ls -al /tmp
        ls -al ${{ matrix.path }}

#    - uses: actions/checkout@v2
#      with:
#        submodules: true
#        fetch-depth: 0

#    - run: git fetch --recurse-submodules=no https://github.com/adafruit/circuitpython refs/tags/*:refs/tags/*
#    - name: CircuitPython version
#      run: |
#        git describe --dirty --tags
#        echo >>$GITHUB_ENV CP_VERSION=$(git describe --dirty --tags)

#    - name: build mpy-cross
#      run: make -j2 -C mpy-cross

#    - name: build rp2040
#      run: make -j2 -C ports/raspberrypi BOARD=adafruit_feather_rp2040 TRANSLATION=de_DE

#    - name: build samd21
#      run: make -j2 -C ports/atmel-samd BOARD=feather_m0_express TRANSLATION=zh_Latn_pinyin

#    - name: build samd51
#      run: make -j2 -C ports/atmel-samd BOARD=feather_m4_express TRANSLATION=es

#    - name: build nrf
#      run: make -j2 -C ports/nrf BOARD=feather_nrf52840_express TRANSLATION=fr

#    - name: build stm
#      run: make -j2 -C ports/stm BOARD=feather_stm32f405_express TRANSLATION=pt_BR

# I gave up trying to do esp32 builds on windows when I saw
# ERROR: Platform MINGW64_NT-10.0-17763-x86_64 appears to be unsupported
# https://github.com/espressif/esp-idf/issues/7062
#
#    - name: prepare esp
#      run: ports/esp32s2/esp-idf/install.bat
#      shell: cmd
#
#    - name: build esp
#      run: . ports/esp32s2/esp-idf/export.sh && make -j2 -C ports/esp32s2 BOARD=adafruit_metro_esp32s2
